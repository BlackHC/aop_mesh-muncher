# Andreas Kirsch - adapted from FindNiven.cmake

IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(ANTTWEAKBAR_ARCHITECTURE "64")
ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
	SET(ANTTWEAKBAR_ARCHITECTURE "")
ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)

SET(ANTTWEAKBAR_ROOT_DIR CACHE PATH "AntTweakBar root directory")

SET(ANTTWEAKBAR_LIBRARY_DIR ${ANTTWEAKBAR_ROOT_DIR}/lib)
SET(ANTTWEAKBAR_INCLUDE_DIR ${ANTTWEAKBAR_ROOT_DIR}/include)

#MARK_AS_ADVANCED(ANTTWEAKBAR_LIBRARY_DIR ANTTWEAKBAR_INCLUDE_DIR)

FIND_LIBRARY(ANTTWEAKBAR_LIBRARY	AntTweakBar${ANTTWEAKBAR_ARCHITECTURE}.lib   PATHS ${ANTTWEAKBAR_LIBRARY_DIR})

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(AntTweakBar DEFAULT_MSG ANTTWEAKBAR_LIBRARY ANTTWEAKBAR_INCLUDE_DIR)

FUNCTION(ANTTWEAKBAR_COPY_BINARIES)
	IF(${ARGC} EQUAL 0)
		SET(TargetDirectory ${CMAKE_BINARY_DIR})
	ELSE(${ARGC} EQUAL 0)
		Set(TargetDirectory ${ARGV0})
	ENDIF(${ARGC} EQUAL 0)

	ADD_CUSTOM_TARGET(
			AntTweakBarCopyBinaries
			COMMAND ${CMAKE_COMMAND} -E copy ${ANTTWEAKBAR_LIBRARY_DIR}/AntTweakBar${ANTTWEAKBAR_ARCHITECTURE}.dll ${TargetDirectory}
			COMMENT "Copying AntTweakBar binaries to '${TargetDirectory}'"
			VERBATIM
		)
ENDFUNCTION(ANTTWEAKBAR_COPY_BINARIES)


